(()=>{"use strict";var e={inputSelector:".popup__form-item",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_disabled",inputErrorClass:"popup__form-item_type_error",errorClass:"popup__error-text_visible",popupEditProfileSelector:".popup_type_edit-form",popupAddForm:".popup_type_add-form",popupAvatarForm:".popup_type_avatar-form"};function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const n=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._parameters=t,this._formSelector=n,this._inputList=Array.from(document.querySelector(this._formSelector).querySelectorAll(this._parameters.inputSelector))}var n,r;return n=e,(r=[{key:"_showInputError",value:function(e,t){var n=e.nextElementSibling;n.textContent=t,n.classList.add(this._parameters.errorClass),e.classList.add(this._parameters.inputErrorClass)}},{key:"_hideInputError",value:function(e){var t=e.nextElementSibling;t.textContent="",t.classList.remove(this._parameters.errorClass),e.classList.remove(this._parameters.inputErrorClass)}},{key:"_checkInputValidity",value:function(e){if(e.validity.valid)this._hideInputError(e);else{var t=e.validationMessage;this._showInputError(e,t)}}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add(this._parameters.inactiveButtonClass),t.setAttribute("disabled",!0)):(t.classList.remove(this._parameters.inactiveButtonClass),t.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(e){var t=this,n=e.querySelector(this._parameters.submitButtonSelector);this._toggleButtonState(this._inputList,n),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState(t._inputList,n)}))}))}},{key:"cleanInputErrors",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"enableValidation",value:function(){var e=document.querySelector(this._formSelector);e.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners(e)}}])&&t(n.prototype,r),e}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const o=function(){function e(t,n,r,o,i){var a=t.name,u=t.link,c=t.likes,s=t.cardId,l=t.owner,p=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=a,this._link=u,this._likes=c,this._cardId=s,this._owner=l,this._user=p,this._templateSelector=n,this._openPopupWithImage=r,this._openPopupWithQuestion=o,this._likeCards=i}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".cards__item").cloneNode(!0)}},{key:"_zoomImage",value:function(){this._openPopupWithImage({name:this._name,link:this._link})}},{key:"_deleteCard",value:function(){this._openPopupWithQuestion({element:this._element,id:this._cardId})}},{key:"_likeCard",value:function(){this._like=this._element.querySelector(".cards__like"),this._like.classList.contains("cards__like_active")?this._likeCards({element:this._element,cardId:this._cardId,method:"DELETE"}):this._likeCards({element:this._element,cardId:this._cardId,method:"PUT"})}},{key:"_checkLikes",value:function(){var e=this;this._likes.some((function(t){return t._id===e._user}))&&this._element.querySelector(".cards__like").classList.add("cards__like_active")}},{key:"_setCardListeners",value:function(){var e=this;this._element.querySelector(".cards__like").addEventListener("click",(function(){e._likeCard()})),this._element.querySelector(".cards__delete").addEventListener("click",(function(){e._deleteCard()})),this._element.querySelector(".cards__image").addEventListener("click",(function(){e._zoomImage()}))}},{key:"generateCard",value:function(){this._element=this._getTemplate();var e=this._element.querySelector(".cards__image");return e.alt=this._name,e.src=this._link,this._element.querySelector(".cards__text").textContent=this._name,this._element.querySelector(".cards__counter").textContent=this._likes.length,this._checkLikes(),this._setCardListeners(),this._owner!=this._user?(this._element.querySelector(".cards__delete").classList.add("cards__delete_disabled"),this._element):this._element}}])&&r(t.prototype,n),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e,t){var n=this,r=t.userId;e.forEach((function(e){var t=e.name,o=e.link,i=e.likes,a=e.cardId,u=e.owner;n._renderer({name:t,link:o,likes:i,cardId:a,owner:u,userId:r})}))}},{key:"addItemPrepend",value:function(e){this._container.prepend(e)}},{key:"addItemAppend",value:function(e){this._container.append(e)}}])&&i(t.prototype,n),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._closePopupByClickOnOverlay=this._closePopupByClickOnOverlay.bind(this),this.close=this.close.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_closePopupByClickOnOverlay",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"setEventListeners",value:function(){this._popup.querySelector(".popup__close-button").addEventListener("click",this.close),this._popup.addEventListener("mouseup",this._closePopupByClickOnOverlay)}}])&&u(t.prototype,n),e}();function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return(p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e,t){return!t||"object"!==s(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return h(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._imagePopupUrl=t._popup.querySelector(".popup__image"),t._imagePopupCaption=t._popup.querySelector(".popup__caption"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.name,n=e.link;this._imagePopupUrl.src=n,this._imagePopupUrl.alt=t,this._imagePopupCaption.textContent=t,p(d(a.prototype),"open",this).call(this)}}])&&l(t.prototype,n),a}(c);function y(e){return(y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t,n){return(v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function b(e,t){return(b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function k(e,t){return!t||"object"!==y(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleSubmitForm;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleSubmitForm=r,t._popupForm=t._popup.querySelector(".popup__form"),t._inputList=t._popupForm.querySelectorAll(".popup__form-item"),t._button=t._popupForm.querySelector(".popup__submit-button"),t}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"renderLoading",value:function(e){this._button.textContent=e?"Сохранение...":"Сохранить"}},{key:"setEventListeners",value:function(){var e=this;v(g(a.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e.renderLoading(!0),e._itemsValue=e._getInputValues(),e._handleSubmitForm(e._itemsValue)}))}},{key:"close",value:function(){v(g(a.prototype),"close",this).call(this),this._popupForm.reset()}}])&&m(t.prototype,n),a}(c);function w(e){return(w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function P(e,t,n){return(P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function C(e,t){return(C=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function O(e,t){return!t||"object"!==w(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function I(e){return(I=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&C(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleSubmitForm;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleSubmitForm=r,t._popupForm=t._popup.querySelector(".popup__form"),t}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;P(I(a.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmitForm({element:e._element,id:e._id})}))}},{key:"open",value:function(e){var t=e.element,n=e.id;this._element=t,this._id=n,P(I(a.prototype),"open",this).call(this)}}])&&E(t.prototype,n),a}(c);function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var q=function(){function e(t){var n=t.nameProfile,r=t.jobProfile;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameProfile=document.querySelector(n),this._jobProfile=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameProfile.textContent,about:this._jobProfile.textContent}}},{key:"setUserInfo",value:function(e){this._nameProfile.textContent=e.name,this._jobProfile.textContent=e.about}}])&&L(t.prototype,n),e}();function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function T(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var x=new(function(){function e(t){var n=t.url,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=n,this._headers=r}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{method:"GET",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).then((function(e){return e}))}},{key:"renewUserInfo",value:function(e){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).then((function(e){return e}))}},{key:"renewUserAvatar",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).then((function(e){return e}))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._url,"/cards"),{method:"GET",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).then((function(e){return e}))}},{key:"createNewCard",value:function(e){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.title,link:e.url})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).then((function(e){return e}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).then((function(e){return e}))}},{key:"likeCard",value:function(e,t){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:t,headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).then((function(e){return e}))}}])&&R(t.prototype,n),e}())({url:"https://mesto.nomoreparties.co/v1/cohort-17",headers:{authorization:"4f7cbaee-8eca-456c-b2b6-53b18a278335","Content-Type":"application/json"}});Promise.all([x.getInitialCards(),x.getUserInfo()]).then((function(t){var r,i,u=(i=2,function(e){if(Array.isArray(e))return e}(r=t)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var a,u=e[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return n}}(r,i)||function(e,t){if(e){if("string"==typeof e)return T(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?T(e,t):void 0}}(r,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),c=u[0],s=u[1];!function(){var t=c.map((function(e){return{name:e.name,link:e.link,likes:e.likes,cardId:e._id,owner:e.owner._id}})),r=new a({renderer:function(e){var t=e.name,n=e.link,i=e.likes,a=e.cardId,u=e.owner,c=e.userId,s=new o({name:t,link:n,likes:i,cardId:a,owner:u,userId:c},"#card-template",g,E,P).generateCard();r.addItemAppend(s)}},".cards"),i=new n(e,e.popupEditProfileSelector),u=new n(e,e.popupAddForm),l=new n(e,e.popupAvatarForm),p=document.querySelector(".profile__overlay"),f=document.querySelector(".profile__avatar"),h=document.querySelector(".profile__edit-button"),d=document.querySelector(".popup__form-item_type_name-input"),y=document.querySelector(".popup__form-item_type_job-input"),m=new q({nameProfile:".profile__name",jobProfile:".profile__job"}),v=new S({popupSelector:".popup_type_edit-form",handleSubmitForm:function(e){x.renewUserInfo(e).then((function(e){m.setUserInfo(e),v.close()})).finally((function(){v.renderLoading(!1)})).catch((function(e){alert(e)}))}}),b=new S({popupSelector:".popup_type_avatar-form",handleSubmitForm:function(e){x.renewUserAvatar(e).then((function(e){f.src=e.avatar,b.close()})).finally((function(){b.renderLoading(!1)})).catch((function(e){alert(e)}))}}),k=new _(".popup_type_zoom-image");function g(e){var t=e.name,n=e.link;k.open({name:t,link:n})}var w=new j({popupSelector:".popup_type_question",handleSubmitForm:function(e){var t=e.element,n=e.id,r=t,o=n;x.deleteCard(o).then((function(e){r.remove(),w.close()})).catch((function(e){alert(e)}))}});function E(e){var t=e.element,n=e.id;w.open({element:t,id:n})}function P(e){var t=e.element,n=e.cardId,r=e.method;x.likeCard(n,r).then((function(e){t.querySelector(".cards__like").classList.toggle("cards__like_active"),t.querySelector(".cards__counter").textContent=e.likes.length})).catch((function(e){alert(e)}))}var C=document.querySelector(".profile__add-button"),O=new S({popupSelector:".popup_type_add-form",handleSubmitForm:function(e){x.createNewCard(e).then((function(e){var t=new o({name:e.name,link:e.link,likes:e.likes,cardId:e._id,owner:e.owner._id,userId:s._id},"#card-template",g,E,P).generateCard();r.addItemPrepend(t),O.close()})).finally((function(){O.renderLoading(!1)})).catch((function(e){alert(e)}))}});r.renderItems(t,{userId:s._id}),m.setUserInfo(s),f.src=s.avatar,i.enableValidation(),u.enableValidation(),l.enableValidation(),k.setEventListeners(),w.setEventListeners(),O.setEventListeners(),C.addEventListener("click",(function(){u.cleanInputErrors(),O.open()})),v.setEventListeners(),b.setEventListeners(),h.addEventListener("click",(function(){var e=m.getUserInfo();d.value=e.name,y.value=e.about,i.cleanInputErrors(),v.open()})),p.addEventListener("click",(function(){l.cleanInputErrors(),b.open()}))}()})).catch((function(e){alert(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,